<html>

<head>

    <title>Edit Document</title>

    <style type="text/css">

        .container {
            max-width: 800px;
            display: flex;
            align-items: flex-start;
            margin: auto;

        }

        .container > * {
            width: 50%;
            border-radius: 5px;
        }

        form {
            display: block;
            margin: 0 5px;
            background: lightgrey;
            padding: 12px;
            border: 1px solid grey;
        }

        form > * {
            display: block;
            margin-bottom: 10px;
            padding: 5px;
        }

        form > textarea {
            width: 100%;
        }

        .d-none {
            display: none;
        }

        .imageUpload {
            display: block;
            border: 1px solid grey;
            padding: 5px;
            background: lightgrey;
            border-radius: 5px;

            margin-bottom: 5px;
        }
        .imageUpload > * {
            display: block;
            margin-bottom: 10px;
            padding: 5px;
        }

        .imageUpload > [type="file"] {
            border: 1px solid dimgrey;
            border-radius: 5px;
        }
        img {
            max-width: 50vw; 
            max-width: 100%;
            box-sizing: border-box;
            border-radius: 5px;
            background: white;
        }
        .error {
            font-weight: bold;
    font-style: italic;
        }
    </style>

</head>

<body>

    <nav>

        <a href="/{{data.brand}}/admin/page/showCollection/{{data.collection}}">{{data.collection}}</a>
    
    </nav>

    <div class="container">

        <form action="" method="post">

            <input name="modelName" type="text" class="d-none" value="{{data.collection}}">
            <input name="_id" type="text" class="d-none" value="{{data._id}}">

        {{#each data.inputs}}

            {{#if (matchValues this.type 'input')}}
                <label for="{{name}}">{{this.label}}</label>
                <input name="{{this.name}}" type="text" id="{{this.id}}" placeholder="" {{#if (matchValues this.required 'true')}} {{/if}} value="{{this.value}}">
            {{/if}}

            {{#if (matchValues this.type 'textarea')}}
                <label for="{{name}}">{{this.label}}</label>
                <textarea name="{{this.name}}" rows="10" type="text" id="{{this.id}}" placeholder="" {{#if (matchValues this.required 'true')}} {{/if}} value="{{this.value}}">{{this.value}}</textarea>
            {{/if}}

            {{#if (matchValues this.type 'date')}}
                <label for="{{name}}">{{this.label}}</label>
                <input name="{{this.name}}" type="datetime-local" id="{{this.id}}" placeholder="" {{#if (matchValues this.required 'true')}} {{/if}} value="{{getDatePickerValue this.value}}">
            {{/if}}

        {{/each}}

        <button id="submitButton" type="submit">Submit</button>

        {{#each data.inputs}}

            {{#if (matchValues this.type 'date')}}

            <button id="runTimer" type="button" onclick="runMyTimer(this)">Run timer</button>

            <p id="timerResponse"></p>

            {{/if}}

        {{/each}}

        </form>

        <div>

        {{#each data.inputs}}

            {{#if (matchValues this.type 'imgURL')}}

                {{#each this.value}}

                <div class="imageUpload" id="">

                    {{#if this}}
                        <img counter='1' linkedTo="img" src="{{this}}" class="image">
                    {{else}}
                        <img counter='1' linkedTo="img" src="" class="image" onload="uploadCloudinary(this)">
                    {{/if}}

                    <input counter='1' type="file" id="img" name="img" accept="image/*" onchange="readURL(this)">

                    <p counter='1' class="error">After image upload, your image link is shown below! </p>

                    <input 
                       class='imageURL' 
                       counter='1' 
                       name="{{../this.name}}" 
                       type="text" 
                       id="{{../this.id}}{{@index}}" 
                       placeholder="" 
                       value="{{{this}}}" 
                       />

                    <button type="button" onclick="removeImage('{{../this.id}}{{@index}}')">Remove Image</button>

                </div>

                {{/each}}

                <button id="addImage" type="button">Add another Image</button>
            {{/if}}

        {{/each}}

    </div>

    <script src="https://code.jquery.com/jquery-3.5.0.js"></script>

    <script>

        $('#addImage').on('click',function(e) {

            $('.imageUpload:eq(0)').clone().insertAfter('.imageUpload:eq(-1)');
            let tagsCount = $('.imageUpload').length;
            $('.imageUpload:eq(-1) > *').attr({counter: tagsCount});
            $(`.error[counter="${tagsCount}"]`).html('After image upload, your image link is shown below! ');
            $(`img[counter=${tagsCount}]`).attr({
                src: '',
            });
            let prvsLabel = $(`label[counter=${tagsCount}]:eq(-1)`).attr('for');
            $(`label[counter=${tagsCount}]:eq(-1)`).attr('for',prvsLabel + tagsCount);
            $(`input[counter=${tagsCount}]:eq(-1)`).attr({
                name: prvsLabel + tagsCount,
                id: prvsLabel + tagsCount,
                value: ''
            });

        });

        let readURL = function (input) {
            let counter = $(input).attr('counter');
            let imgTag = `img[counter="${counter}"]`;
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $(imgTag).attr({
                        'src': e.target.result,
                        onload: 'uploadCloudinary(this)'
                    });
                };
                reader.readAsDataURL(input.files[0]);
            }
        };

        let uploadCloudinary = function(item) {

            let counter = $(item).attr('counter');
            let img = $(item).attr('src');
            let data = {
                img: img, 
                width:  $(item).width() * 2,
                height:  $(item).height() * 2
            };
            $(`.error[counter="${counter}"]`).html('Uploading Image...');
            console.log(data);
            $.ajax({
              type: "POST",
              url: '/{{data.brand}}/admin/data/uploadCloudinary/n',
              data: data,
              success: (data) => {
                console.log(data);
                if (data.error) return $(`.error[counter="${counter}"]`).html(data.error);
                $(`input[counter="${counter}"]`).attr({
                    value: data.url,
                });
                $(`.error[counter="${counter}"]`).html('Image Uploaded Successfully. Link added in input !');
              }
            });

        };

        $('form').on('submit',function(e) {
            e.preventDefault();
            let inputForm = $(this).serializeArray();
            let imageUploadDivs = $('.imageUpload').length;
            let formData = $(this).serialize();
            let imageTagsName = $('.imageURL').attr('name');

            if (imageUploadDivs > 0) {
                let imageTags = $('.imageURL').serializeArray();
                let imageURLs = imageTags.map(val => val.value);
                let imageCSV = imageURLs.reduce((total,val) => {
                    total = encodeURI(val) + '+' + total ; 
                    return total;
                },'').slice(0, -1);
                formData = `${formData}&${imageTagsName}=${imageCSV}`;
            }

            // TODO: Make serialize() take only one imageURL

            $.ajax({
              type: "POST",
              url: '/{{data.brand}}/admin/data/updateSequence/n',
              data: formData,
              success: (data) => {
                $('#submitButton').html(data.error);
                  return;
                window.location.href = '/{{data.brand}}/admin/page/showCollection/{{data.collection}}';
              }
            });
        });

        let removeImage = function(inputId) {
            // TODO: Get the id of this image and delete from Cloudinary account. in'sha'Allah
            $(`#${inputId}`).parent('.imageUpload').remove();
            console.log($(`#${inputId}`))
            let inputURL = $(`#${inputId}`).attr('value');
            console.log(inputURL);
        };

        let runMyTimer = function(elem) {
            // run Timer in the server for this brand so that if any thing important related to this project needs to be done server does itself

            $.ajax({
                type: "GET",
                url: "/{{data.brand}}/admin/data/runTimer/n",
            }).done( val => {
                let string = val.success + "<br>" + (
                    (val.status != null) ? val.status.reduce( (total, val, index) => total += val + "<br>" , "" ) : val.status
                    );
                $(elem).siblings('#timerResponse').html(string);
            }).fail( err => {
                $(elem).siblings('#timerResponse').html(val.success);
            });

        };

    </script>

</body>

</html>
