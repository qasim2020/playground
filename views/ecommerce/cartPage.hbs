<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Cart Page</title>
    <link href="https://fonts.googleapis.com/css2?family=Didact+Gothic&display=swap" rel="stylesheet">     
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/essentials.css">
    <style type="text/css">

        .item span {
            border-radius: 5px;
        }

        .searchButtons > span:hover {
            background: #F2F2F2;
            cursor: pointer;
        }

        .grid {
            display: grid;
            max-width: 750px;
            grid-template-columns: 0.5fr 0.8fr 0.4fr;
            margin: auto;
        }

        .grid .btns {
            grid-column: 3;
        }

        .grid img {
            width: 100%;
            margin-top: auto;
        }

        .item {
            display: grid;
            grid-column: 1/-1;
            grid-template-columns: 0.5fr 0.8fr 0.4fr;
            border: 1px solid #E0E0E0;
            border-radius: 6px;
            margin-bottom: 6px;
        }

        .item .img {
            display: flex;
            align-items: center;
            justify-content: center;
            flex-direction: column;
            padding: 0 42px;
        }

        .item span {
            color: #333333;
            background: whitesmoke;
        }

        .img span {
            display: block;
            margin-top: 16px;
            color: #4F4F4F;
            margin-bottom: auto;
        }

        .details {
            padding: 0 33px;
            margin-top: -10px;
        }

        .details span {
            height: 36px;
            width: 24px;
            padding-top: 1px;
            display: inline-block;
            padding: 0 6px;
            margin-right: 3px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .details span:hover {
            cursor: pointer;
        }

        .details span.disabled:hover {
            cursor: not-allowed;
        }

        .details span.disabled {
            opacity: 0.1;
        }

        .quantity, .sizes {
            display: flex;
            align-items: center;
        }

        .grandTotal {
            grid-column: 2;
            padding-right: 33px;
            display: flex;
            align-items: center;
        }

        .grandTotal > p {
            margin-left: auto;
        }

        .cost {
            position: relative;
            background: whitesmoke;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .cost svg:nth-child(2) {
            position: absolute;
            right: 0;
            top: 0;
        }

        .cost svg:nth-child(3) {
            position: absolute;
            top: 87%;
            left: 50%;
            transform: translate(-50%,-50%);
        }

        .cost h1, .grandTotalCost h1 {
            text-align: center;
            color: #Eb5757;
        }

        h1 {
            font-family: 'Didact Gothic', sans-serif;
        }

        .item span.active {
            background: #Eb5757;
            color: white;
            border: 1px solid #333333;
            font-weight: bold;
        }

        .btns > *:nth-child(1) {
            display: block;
            margin-bottom: 5px;
        }
    </style>
</head>
<body>
    <nav>

        <div class="left">
            <a href="/{{data.brand}}/gen/page/landingPage/n">
                <img src="{{split0 data.resources.[0].logo}}" height="44">
            </a>
            <p>
            <span>·</span>
            <a href="/{{data.brand}}/gen/page/landingPage/n">Home</a>
            /
            <a href="/{{data.brand}}/gen/page/cartPage/n" class="active">Cart</a>
            </p>
        </div>

        <div class="right">
            <a href="/{{data.brand}}/gen/page/aboutPage/n">Sign In</a>
            <a href="/{{data.brand}}/gen/page/cartPage/n">Cart</a>
        </div>
    
    </nav>
    <section class="grid">
        {{#unless data.cartItems}}
        <p>Your cart is empty. Please go to home page to fill your cart.</p>
        {{/unless}}
        {{#if data.cartItems}}
    {{#each data.cartItems}}
        <div class="item">

            <div class="img">
                <img src="{{split0 this.items.[0].imgURL}}" alt="">
                <span>Item details</span>
            </div>
            <div class="details">
                <h1>{{this.items.[0].name}}</h1>
                <p>{{this.items.[0].school}} · {{this.items.[0].category}}</p>
                <p>Max Quantity: {{this.items.[0].quantity}} ({{this.items.[0].size}})</p>
                <p class="quantity" id="quantity{{@index}}" quantity="{{this.quantity}}" max-quantity="{{this.items.[0].quantity}}">
                    <span onclick="minusOne(this)">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M19 14H5V12H19V14Z" fill="#333333"/>
                    </svg>
                    </span>
                    <span class="active">{{this.quantity}}</span>
                    <span onclick="addOne(this)">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M19 13H13V19H11V13H5V11H11V5H13V11H19V13Z" fill="#333333"/>
                    </svg>
                    </span>
                </p>
                <p>Size</p>
                <p class="sizes">
                    {{#each this.allSizes}}
                        <!-- name, maxQty, imgURL, school, category, cost -->
                        <span 
                   cartId={{../this._id}}
                   myId="{{_id}}"
                   connectingID="{{connectingID}}"
                   name="{{name}}" 
                   maxQty="{{quantity}}" 
                   imgURL="{{imgURL}}" 
                   school="{{school}}" 
                   category="{{category}}" 
                   cost="{{cost}}" 
                   size="{{size}}" 
                   my-data="{{quantity}} x items available"
                   class="
                   info-circle
                   {{#if (matchValues ../this.items.[0].size this.size)}} active {{/if}}
                   {{#if (matchValues this.quantity 0)}} disabled {{/if}}
                   "
                       >
                            {{size}}
                        </span>
                    {{/each}}
                </p>
            </div>
            <div class="cost" cost="{{this.items.[0].cost}}">
                <h1>PKR {{this.items.[0].cost}}</h1>
                <svg 
                    onclick="removeItem(this)" width="34" height="34" viewBox="0 0 34 34" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <g clip-path="url(#clip0)">
                    <path d="M21.2133 14.1421L19.7991 12.7279L16.9707 15.5563L14.1423 12.7279L12.7281 14.1421L15.5565 16.9705L12.7281 19.7989L14.1423 21.2131L16.9707 18.3847L19.7991 21.2131L21.2133 19.7989L18.3849 16.9705L21.2133 14.1421ZM24.0418 9.89944C20.1385 5.99621 13.8029 5.99621 9.89964 9.89944C5.99641 13.8027 5.99641 20.1383 9.89964 24.0416C13.8029 27.9448 20.1385 27.9448 24.0418 24.0416C27.945 20.1383 27.945 13.8027 24.0418 9.89944ZM11.3138 22.6274C8.19551 19.509 8.19551 14.432 11.3138 11.3137C14.4322 8.19531 19.5092 8.19531 22.6276 11.3137C25.7459 14.432 25.7459 19.509 22.6276 22.6274C19.5092 25.7457 14.4322 25.7457 11.3138 22.6274Z" fill="#333333"/>
                    </g>
                    <defs>
                    <clipPath id="clip0">
                    <rect width="24" height="24" fill="white" transform="translate(16.9707) rotate(45)"/>
                    </clipPath>
                    </defs>
                </svg>

                <svg 
                    class="info-circle" 
                    my-data="Add another size"
                    onclick="duplicateItem(this)" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M17 13L17 11L13 11L13 7L11 7L11 11L7 11L7 13L11 13L11 17L13 17L13 13L17 13ZM22 12C22 6.48 17.52 2 12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12ZM4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20C7.59 20 4 16.41 4 12Z" fill="#333333"/>
                </svg>

            </div>
        
        </div>
    {{/each}}
        <div class="grandTotal" style=""><p>Grand Total</p></div>
        <div class="grandTotalCost"><h1>empty</h1></div>
        <div class="btns">
            <a href="/{{data.brand}}/gen/page/reviewCartPage/n">
                <button class="primary">Check Out</button>
            </a>
            <a href="/{{data.brand}}/gen/page/landingPage/n">
                <button class="secondary">Continue Shopping</button>
            </a>
        </div>
    {{/if}}
    </section>

    <div class="popover shadow"></div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script type="text/javascript" src="/essentials.js"></script>
    <script>
        let addOne = function(e) {
            let elem = $(e).closest('.quantity');
            let maxQty = elem.attr('max-quantity');
            let currentQty = Number( elem.attr('quantity') ) + 1 > maxQty ? maxQty : Number ( elem.attr('quantity') ) + 1;
            elem.attr('quantity',currentQty);
            elem.find('span.active').html(currentQty);
            changeTotal(e);
        };

        let minusOne = function(e) {
            let elem = $(e).closest('.quantity');
            let currentQty = elem.attr('quantity') - 1 < 1 ? 1 : elem.attr('quantity') - 1;
            elem.attr('quantity',currentQty);
            elem.find('span.active').html(currentQty);
            changeTotal(e);
        };

        let changeTotal = function(e, firstLoad) {
            let elem = $(e).closest('.quantity');
            let currentQty = elem.attr('quantity');
            let itemCost = elem.closest('.item').find('.cost').attr('cost');
            let newCost = Number(currentQty) * Number(itemCost);
            elem
                .closest('.item')
                .find('.cost > h1')
                .html('PKR ' + newCost);
            changeGrandTotal(firstLoad);    
        }

        let changeGrandTotal = function(firstLoad) {
            let elems = $('.cost').get().map(val => $(val).find('h1').html().split(' ')[1]);
            let total = elems.reduce( (total, val) => total = total + Number(val), 0 );
            $('.grandTotalCost')
                .find('h1')
                .html('PKR ' + total);
            if (firstLoad) return;
            updateCart();
        }

        let toggleClass = function(elem) {
            $(elem.target).parent('.sizes').find('span').removeClass('active');
            $(elem.target).addClass('active');
        }

        let removeItem = async function(elem) {
            try {
                let data = {myId: $(elem).closest('.item').find('.sizes > span.active').attr('cartId')};
                console.log({data});
                await $.ajax({
                    method: "POST",
                    data: data,
                    url: "/{{data.brand}}/gen/data/removeItemFromCart/n",
                    success: (data) => console.log(data),
                    fail: (e) => console.log(e)
                });
            } catch(e) {
                console.log(e.responseText)
            }
            $(elem).closest('.item').remove();
            changeGrandTotal();
        }

        let updateSize = function(elem) {
            toggleClass(elem);
            let name = $(elem.target).attr("name");
            let maxQty = $(elem.target).attr("maxQty");
            let imgURL = $(elem.target).attr("imgURL");
            let school = $(elem.target).attr("school");
            let category = $(elem.target).attr("category");
            let cost = $(elem.target).attr("cost");
            let size = $(elem.target).attr("size");
            let span = $(elem.target).closest('.details').find('.quantity > span');

            $(elem.target)
                .closest('.details')
                .find('h1')
                    .html(name)
                .siblings('p:eq(0)')
                    .html(`${school} · ${category}`)
                .siblings('p:eq(0)')
                    .html(`Max Quantity:  ${maxQty} (${size})`)
                .siblings('p:eq(1)')
                    .attr({'max-quantity': maxQty, 'quantity': 1})
                    .find('span.active')
                        .html('1')
                .closest('.item')
                .find('img')
                    .attr({src: imgURL});

            changeTotal(span);

        }

        let updateIndexNos = function() {
            $('.item').each(function(index) {
                    $(this).find('.quantity').attr({id: `index` + index});
                });
            }

        let duplicateItem = function(elem) {
            let parent = $(elem).closest('.item');
            let newItem = parent.clone().insertAfter(parent);
            console.log(newItem);
            // TODO: get a mongoID as soon as it is duplicated
            $.get('/{{data.brand}}/gen/data/getMongoId/n', mongoId => {
                console.log(mongoId);
                $(newItem).find('.sizes > span').get().map(val => $(val).attr({cartId: mongoId }) );
            })
            updateIndexNos();
        }
            
        let readyDocument = function(elem) {
            // get all span elements
            // trigger change total on each element and it will find its closest quantity automatically
            $('.quantity').each( (index, val) => changeTotal( $(val).find('span:eq(0)'), true ) );
            updateIndexNos();
        }

        let updateCart = function() {

            if ($('.item').get().length == 0) return console.log('cart is empty, not uploading');

            let output = $('.item').get().map(val => {
                return {
                    _id: $(val).find('.sizes').find('span.active').attr('cartId'),
                    itemId: $(val).find('.sizes').find('span.active').attr('myId'),
                    quantity: $(val).find('.quantity').find('span.active').text(),
                    connectingID: $(val).find('.sizes').find('span.active').attr('connectingID'),
                    sessionId: "{{data.sessionId}}",
                    email: "{{data.email}}",
                    cartStatus: "open"
                }
            });

            console.table(output);
            // TODO: zerioise the ID if it is a duplicate
            // output.map(val => console.log(val.itemId) );

            let data = {
                cart: output,
                modelName: "{{data.brand}}-cart",
            };

            $.ajax({
                method: "POST",
                data: data,
                url: "/{{data.brand}}/gen/data/updateCart/n",
                success: (data) => console.log(data),
                fail: (e) => console.log('error', e)
            });

        }

        $(document).on('click', '.sizes > span:not(.disabled)', updateSize);
        $(document).ready(readyDocument);
    </script>
</body>
</html>
