<html>

<head>

    <title>Show Collections</title>

<style type="text/css">
    
    nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    nav a , nav input, nav button {
        text-decoration: none;
        padding: 4px;
        border: 1px solid lightgrey;
        color: black;
    }

    .container {
        display: flex;
    }

    .sidebar {
        width: 233px;
        min-width: 190px;
        background: lightgrey;
        padding: 10px;
        margin-right: 10px;
        border-radius: 1px;
    }

    .tables {
        overflow: scroll;
        flex-grow: 1;
    }
    
    table {
        width: 100%;
        border-collapse: collapse;
    }

    form {
        display: block;
        height: 11px;
    }

    td,th {
        border: 1px solid grey;
        padding: 5px;
        white-space: nowrap;
        text-align: center;
        max-width: 100px;
        overflow: hidden;
    }

    .order {
        display: grid;
        grid-template-columns: 1fr 0.7fr 0.7fr 1.6fr 1fr;
        padding: 5px;
        border: 1px solid whitesmoke;
        background: whitesmoke;
        grid-gap: 5px;
        margin-bottom: 11px;
    }

    .order p {
        line-height: 1.5;
    }

    bold {
        font-weight: bold;
    }

    .order > div:nth-child(1) {
        grid-row: 1/4;
    }

    .order > div:nth-last-child(1) {
        grid-column: 2/-1;
    }

    .d-none {
        display: none;
    }

    .modal {
        position: absolute;
        background: white;
        border: 1px solid grey;
        padding: 1rem;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
        background: whitesmoke;
    }

    button.active {
        background: darkred;
        color: white;
        font-weight: bold;
    }

    .page {
        padding: 1px 9px 14px 14px;
        background: whitesmoke;
        margin-bottom: 11px;
    }

</style>
</head>

<body>

    <nav>

        <form>
            <label>Create New Collection</label>
            <input name="name" id="collectionName" type='text' placeholder='Enter Collection Name' required>
            <button id="submitButton" type="submit">Submit</button>
        </form>

        <p>
            <a href="/{{data.brand}}/gen/page/landingPage/n">Home</a>
            <a href="/{{data.brand}}/admin/page/editCollection/{{data.modelName}}">Edit this Collection</a>
            <a href="/{{data.brand}}/admin/page/deleteFromCollection/{{data.modelName}}?redirect=showCollection&redirectInput={{data.brand}}-users">Delete this Collection</a>
            <a href="/{{data.brand}}/admin/page/bulkUpload/{{data.modelName}}">Bulk Upload</a>
            <a href="/{{data.brand}}/admin/page/newDocument/{{data.modelName}}">Add New Document</a>
            <button class="{{#if data.notifications.count}}active{{/if}}" my-data="
            {{#each data.notifications.texts}}
            <p>{{this.text}}</p>
            {{/each}}
                " onclick="showData(this)">Notifications {{data.notifications.count}}</button>
            <a href="/{{data.brand}}/admin/page/destroySession/n?redirect=signin&redirectInput=n">Log Out</a>
        </p>
    
    </nav>

        {{#if data.success}}
        <p>{{data.success}}</p>
        {{/if}}

   
        
        <div class="container">

        <div class="sidebar">
            {{#each data.navRows}}
                <p><a href="/{{../data.brand}}/admin/page/showCollection/{{this}}">{{this}}</a></p>
            {{/each}}
        </div>

        <div class="tables">
            <p><a href="/{{data.brand}}/admin/page/normalLayout/{{data.brand}}-pages">Normal Layout</a></p>
            {{#each data.pages}}

            <div class="page">

                <p>Name:— <bold>{{this.page}}</bold></p>
                <p>Slug:— {{this.slug}}</p>
                <a href="/{{../data.brand}}/admin/page/editPage/{{this._id}}">Edit Page</a>
                <a href="/{{../data.brand}}/gen/page/showPage/{{this.slug}}">View Page</a>
            
            </div>

            {{/each}}
        </div>

    </div>

    <div class="modal d-none">
        <div class="data"></div>
        <button onclick="closeModal()">Close</button>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>

    <script>

        $('form').on('submit',function(e) {
            e.preventDefault();
            console.log($(this).serialize());
            console.log('/{{data.brand}}/admin/page/createNewCollection/' + $('#collectionName').val());
            return window.location.href = '/{{data.brand}}/admin/page/createNewCollection/' + $('#collectionName').val();
            $.ajax({
              type: "GET",
              url: '/{{data.brand}}/admin/data/createNewCollection/'+$('#collectionName').val(),
              success: (data) => {
                console.log('successful data sent'),
                console.log(data);
                $('#submitButton').html(data.error);
              }
            });
        });

        let updateOrder = function(elem) {
            // _id	cartIds	name	address	mobile	status	orderNo	sessionId	payment
            let output = {
                _id: $(elem).closest('.order').attr('my-id'),
                status: $(elem).closest('.order').find('.status').val(),
                payment: $(elem).closest('.order').find('.payment').val()
            };

            let items = $(elem).closest('.order').find('.item').get().map( val => {
                return {
                    itemId: $(val).attr('my-id'),
                    quantity: $(val).attr('my-quantity'),
                    quantityDiff: $(val).attr('my-quantityDiff')
                }
            });

            let data = {
                order: output,
                items: items,
                quantityTest: quantityTest(elem)
            }
            
            // console.log(data);

            $.ajax({
                url: '/{{data.brand}}/admin/data/updateOrder/n',
                method: 'post',
                data: data,
                success: val => updateItemsQuantity(val),
                fail: fail => console.log(fail)
            });
        }

        let updateItemsQuantity = function(data) {
            if (data.hasOwnProperty('item') == false) return;
            let output = data.item.map( val => {
                let currentQty = $(`[my-id=${val._id}]`).attr('my-quantity');
                let newQty = val.quantity;
                console.log({currentQty, newQty});
                $(`[my-id=${val._id}]`).attr({'my-quantity': val.quantity});
            });
            return;
        }

        let quantityTest = function(elem) {
            let currentStatus = $(elem).closest('.order').find('.status').attr('my-status');
            let newStatus = $(elem).closest('.order').find('.status').val();
            $(elem).closest('.order').find('.status').attr('my-status', newStatus );
            if (currentStatus == newStatus) return 0;
            if (currentStatus == 'Delivered' && newStatus != 'Delivered') return 1; //ITEM PLACED BACK IN INVENTORY
            if (currentStatus != 'Delivered' && newStatus == 'Delivered') return -1; // ITEM REMOVED FROM INVENTORY
            return 0;
        }


        let showData = function(elem) {
            let data = $(elem).attr('my-data');
            $('.modal').removeClass('d-none').find('.data').html(data);
        };

        let closeModal = function() {
            $('.modal').addClass('d-none');
        };
    </script>


</body>

</html>
