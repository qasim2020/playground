<html>

<head>

    <title>Edit Document</title>

    <style type="text/css">

        .container #fileInp, .container a, .container button {
            padding: 7px;
            background: floralwhite;
            border: 1px solid black;
            color: black;
            text-decoration: none;
            display: block;
            margin-bottom: 5px;
            background: floralwhite;
        }

        .container {
            padding: 5px;
        }

    </style>

</head>

<body>

    <nav>

        <a href="/{{data.owner}}/admin/page/showCollection/{{data.collection}}">{{data.collection}}</a>
    
    </nav>

    <div class="container">

        <h3>Step 1</h3>
        <p>Please download existing data by pressing the button below.</p>
        <button id="downloadFile" href="/{{data.owner}}/admin/page/downloadCSVFile/{{data.collection}}">Download Existing Data</button>
        <br>

        <h3>Step 2</h3>
        <p>Add values to the file you have downloaded above. Avoid using a badly formatted file, because it can cause errors.</p>
        <br>

        <h3>Step 3</h3>
        <p>Upload your file by pressing below button.</p>
        <form method="get" action="">
            <input id="fileInp" type="file" accept=".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel"  aria-describedby="fileInp" data="{{data.sampleRow}}"> 
            <button id="uploadFile" type="submit">Upload File</button>
        </form>
        <br>

        <h3>Step 4</h3>
        <p>Review the error below to see how many conflicts you found.</p>
        <p class="error">Errors come here</p>


    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/xlsx.js"></script>

    <script>

         $('#downloadFile').on('click',function(e) {
             $.get("/{{data.owner}}/admin/data/downloadCSVFile/{{data.collection}}",function(data,status) {
                 console.log(data);
                 window.location = `/${data}`;
             });
            //  e.preventDefault();
            //  console.log($(this).serialize());
            //  $.ajax({
            //    type: "POST",
            //    url: '/{{data.owner}}/admin/data/saveSequence/n',
            //    data: $(this).serialize(),
            //    success: (data) => {
            //      console.log('successful data sent'),
            //      console.log(data);
            //      $('#submitButton').html(data.error);
            //    }
            //  });
         });

        $('form').on('submit',function(e) {
            e.preventDefault();
            let data = $(this).data();
            console.table(Object.values(data));

            if (Object.values(data).length == 0) return $('#uploadFile').html('No data found in this file');
            $('#uploadFile').html('Data exists -- upload it')

            return;
            $.post("/{{data.owner}}/admin/data/downloadCSVFile/{{data.collection}}",function(data,status) {});
        });

        $('#uploadFile').on('click', function(e) {
        });


      let myFuncs = {
          readURL: async function(input) {
            return new Promise(function(resolve, reject) {

                var reader = new FileReader();
                reader.onload = function(e) {
                    return resolve(e.target.result.split("\n"));
                };

                reader.readAsText(input);

            });
          },

          matchArrays: function(val1,val2) {
              console.log(JSON.stringify(val1), JSON.stringify(val2),JSON.stringify(val1) == JSON.stringify(val2));
              return JSON.stringify(val1) == JSON.stringify(val2);
          }
      };

      let uploadedData = [];

      $("#fileInp").change(function(e) {
        let dataLength = $(this).attr('data').split(',').length;
        let sampleFormat = $(this).attr('data').split(',');
        let incomplete = [];
        
        myFuncs.readURL(e.target.files.item(0)).then((msg) => {

            console.log(Object.values(msg)[0]);

            if (myFuncs.matchArrays(Object.values(msg)[0].replace(/"|\r/g,"").split(','), sampleFormat) == false) incomplete.push('Data does not match the sample sheet');
            let headings = Object.values(msg)[0].replace(/"|\r/g,"").split(','); 

            if (msg.length < 1) incomplete.push(`No data added <br>`);
            if (incomplete.length) {
                return $('.error').html(`Error at following entries:- <br> ${JSON.stringify(incomplete).substr(1).slice(0, -1).replace(/,|"/g,'')}`);
            }
            let keys = Object.keys(msg);
            let values = Object.values(msg);
            let output = values.map(val1 => {
              return val1.split(',').reduce((total,val2,key) => {
                  total = Object.assign(total,{
                      [headings[key]] : val2.replace(/"|\r/g,"")
                  });
                  return total;
              },{});
            });
            output.shift();
            $('form').data(output,output);

            }).catch((e) => {
                console.log(e);
                return $('.error').html(e);
            });
      });

    </script>
</body>

</html>
