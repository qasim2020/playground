<script>

let readURL = function (elem) {

    $(elem).closest(".placeholder").find("p.error").addClass("d-none");

    let afterCloudinary = function(val) {

        console.log(val);
        $(elem).closest(".placeholder").find("p.error.two").html("Uploading Image — Done. Saving...").removeClass("d-none");

        $(elem).closest(".webEditor").find('input[type="text"]').val(val.url);
        $(elem).closest('.placeholder').prev().attr({ 
            src: val.url, 
            public_id: val.public_id.split('/')[ val.public_id.split('/').length - 1 ] 
        }); 
        $(".btn.saving").addClass("d-none");

        $(elem).closest(".webEditor").attr({lock: "false"});
        saveSlide( $(elem).closest(".webEditor") );
        $(elem).closest(".placeholder").find("p.error.two").html("Uploading Image – Done. Saving – Done.").removeClass("d-none");
        // inputChanged( $(elem).closest(".webEditor").find('input[type="text"]') );

    };

    let uploadCloudinary = function(img) {

        let data = {
            public_id: $(elem).closest('.placeholder').prev().attr("public_id"),
            img: img,
            // width: $(elem).closest('.placeholder').prev().css('width').match(/\d+/g)[0],
            // height: $(elem).closest('.placeholder').prev().css('height').match(/\d+/g)[0],
            };

        $(elem).closest(".placeholder").prev().attr({ src : img });
        // $(".btn.saving").html("UPLOADING IMAGE...").removeClass("d-none");
        $(elem).closest(".placeholder").find("p.error.two").html("Uploading Image...").removeClass("d-none");
        console.log(data);

        $.ajax({
            url: "/{{data.brand}}/{{data.permit}}/data/uploadCloudinary/n",
            method: "POST",
            data: data,
            success: val => afterCloudinary(val),
            error: (err, status, response) => console.log(err.responseText)
        });
    };

    if (elem.files && elem.files[0]) {
        var reader = new FileReader();
        reader.onload = function(e) {
            return uploadCloudinary(e.target.result);
        };
        reader.readAsDataURL(elem.files[0]);
    }
}

let inputChanged = function(elem) {
    console.log(" input changed");
    $(elem).closest(".placeholder").find("p.error").addClass("d-none");

    let type = $(elem).closest(".placeholder").prev().prop("tagName");

    if ( $(elem).val() == "" ) {
        $(elem).closest(".placeholder").find("p.error.one").html("Please enter a value.").removeClass("d-none");
        return console.log(" no value entered ");
    }

    function checkImage(url) {
        console.log( url.match(/^(http)s*/g) );
        if ( url.match(/^(http)s*:\/\//g) == null ) {
              $(elem).closest(".placeholder").find("p.error.one").html("Image does not exist. Please enter correct link.").removeClass("d-none");
              return console.log("invalid url");
        }

        $(elem).closest(".placeholder").find("p.error.one").html("Checking Image Link...").removeClass("d-none");

        try {
            var request = new XMLHttpRequest();
            request.open("GET", url, true);
            request.send();
            request.onload = function() {
            status = request.status;
                if (request.status == 200) {
                    console.log(" image exists ");
                    $(elem).closest(".placeholder").find("p.error.one").html("Image Exists. Saving...").removeClass("d-none");
                    $(elem).closest(".webEditor").attr({lock: false});
                    $(elem).closest(".placeholder").prev().attr({ src : $(elem).val() });
                    saveSlide( $(elem).closest(".webEditor") );
                    $(elem).closest(".placeholder").find("p.error.one").html("Image Exists. Save Completed.").removeClass("d-none");
                } else {
                    $(elem).closest(".placeholder").find("p.error.one").html("Image does not exist. Please enter correct link.").removeClass("d-none");
                    console.log(" image does not exist" );
                }
            }
            request.onerror = function(val) {
                $(elem).closest(".placeholder").find("p.error.one").html("Image does not exist. Please enter correct link.").removeClass("d-none");
                console.log(" image does not exist " );
            }
        } catch (e) {
            $(elem).closest(".placeholder").find("p.error.one").html("Image does not exist. Please enter correct link.").removeClass("d-none");
            console.log(e);
        }
    }


    if (type == "IMG") {
        console.log( "check if this image src is valid or not" );
        $(elem).closest(".webEditor").attr({lock: true});
        checkImage( $(elem).val() );
        return;
    } else if (type == "A") {
        console.log( "Change Src to Href  also");
        $(elem).closest(".webEditor").attr({lock: false});
        $(elem).closest(".placeholder").prev().attr({ href : $(elem).val() });
    }
};

let saveSlide = function(elem, content) {


    if ( $(elem).attr("lock") == "true" ) {
        return console.log("webEditor is Locked");
    };

    console.log(" webEditor is not LOCKED");
    console.log(" saving slide ");

    if ( content == undefined ) {
        let temp;
        temp = $(elem).clone();
        temp.find("*").removeAttr("contenteditable");
        temp.find(".e").attr({onclick: temp.find(".e").attr("onclick").replace(/editable\(this\)/g, "") });
        temp.find(".placeholder").remove();
        content = temp.html();
    }

    return saveInput(elem, $(elem).attr("_id"), "webEditor", content);

};

let editable = function(elem) {

    $(elem).closest(".webEditor").attr({lock: "false"});
    console.log(" unlocked webEditor");

    let type = $(elem).prop("tagName");

    if ( $(elem).next().hasClass("placeholder") ) { 
        $(elem).next().remove();
        return console.log( "Placeholder is already placed next to this element" );
    };

    let absoluteOrRelative = function() {

        if ( $(elem).css("position") == "absolute" ) {

            console.log( "making placeholder absolute" );
            $(elem).next().css({position: "absolute"});

        }

    };

    switch (true) {
        case ( type == "IMG" ) :
            console.log("Upload an Image or ADD the source of img below");
            $(".placeholders > .img").clone().insertAfter( elem ).find("input:eq(0)").val( $(elem).attr("src") )
                .closest("p").next().find(".btn.white")
                .html( $(".btn.white").html() + ` ( ${ $(elem).css("width").match(/\d+/g) } x ${ $(elem).css("height").match(/\d+/g) } )` );
            absoluteOrRelative();
            break;
        case ( type == "A" ) :
            console.log("Add the SRC inpute below this button");
            $(".placeholders > .href").clone().insertAfter( elem ).find("input").val( $(elem).attr("href") );
            absoluteOrRelative();
            break;
        default: 
            break;
    }

};

var editor = CodeMirror(document.getElementById("editor"),{
    lineNumbers: true,
    lineWrapping: true,
    mode: "xml",
    htmlMode: true,
});

let toggleMode = function(elem) {

    $(elem).closest(".slide-editor").find(".placeholder").remove();
    $(elem).closest(".slide-editor").find(".slide").toggleClass("d-none").prev(".advanced-editor").toggleClass("d-none");

    if ( $(elem).closest(".slide-editor").find(".advanced-editor").hasClass("d-none") ) {
        $(elem).closest(".slide-editor").find(".slide").html( editor.getValue() );
        $(".slide-editor > .slide > div .e").attr({ onclick: "editable(this)" });
    } else {
        $(".slide-editor > .slide *").removeAttr("onclick contenteditable");
        let html = $(elem).closest(".slide-editor").find(".slide").html().replace(/^ +/gm, "");
        editor.setValue( html );
    }

};

</script>
